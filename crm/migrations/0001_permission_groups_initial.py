# Generated by Django 5.2.4 on 2025-08-12 16:41

# crm/migrations/0001_initial.py
from django.db import migrations

def create_initial_data(apps, schema_editor):
    """Initial setup for groups and permissions"""
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    ad_content_type, _ = ContentType.objects.get_or_create(
        app_label='advertisements',
        model='advertisement'
    )
    Permission.objects.get_or_create(
        codename='view_advertisement_stats',
        name='Can view advertisement statistics',
        content_type=ad_content_type
    )

    groups_config = {
        'Operator': [
            'leads.add_lead',
            'leads.change_lead',
            'leads.view_lead',
            'advertisements.view_advertisement_stats'
        ],
        'Marketer': [
            'products.add_product',
            'products.change_product',
            'products.view_product',
            'advertisements.add_advertisement',
            'advertisements.change_advertisement',
            'advertisements.view_advertisement'
        ],
        'Manager': [
            'leads.view_lead',
            'customers.view_customer',
            'customers.add_customer',
            'contracts.add_contract',
            'contracts.change_contract',
            'contracts.view_contract',
            'advertisements.view_advertisement_stats'
        ]
    }

    for group_name, permission_codenames in groups_config.items():
        group, _ = Group.objects.get_or_create(name=group_name)
        for codename in permission_codenames:
            app_label, perm_codename = codename.split('.')
            try:
                content_type = ContentType.objects.get(app_label=app_label)
                perm = Permission.objects.get(
                    codename=perm_codename,
                    content_type=content_type
                )
                group.permissions.add(perm)
            except (ContentType.DoesNotExist, Permission.DoesNotExist) as e:
                print(f"Warning: {e}")

class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(
            create_initial_data,
            reverse_code=migrations.RunPython.noop
        ),
    ]